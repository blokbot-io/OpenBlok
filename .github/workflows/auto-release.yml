name: CD | Release
# CD | master -> master-ci -> release

on:
  push:
    branches: [master]

  workflow_dispatch:

jobs:
  pull_request:
    runs-on: ubuntu-latest
    name: start master-ci
    steps:
      - uses: actions/checkout@v3

      - name: Wait on check
        uses: fountainhead/action-wait-for-check@v1.0.0
        id: wait-for-lint

        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: lint
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Create Pull Request

        if: steps.wait-for-lint.outputs.conclusion == 'success'
        uses: repo-sync/pull-request@v2
        with:
          destination_branch: 'master-ci'
          github_token: ${{ secrets.GITHUB_TOKEN }}

  # master -> master-ci
  # --- Waits for builds to finish before merging. ---
  merge:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Wait on check
        uses: fountainhead/action-wait-for-check@v1.0.0
        id: wait-for-lint

        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: lint
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Wait for Build
        if: steps.wait-for-lint.outputs.conclusion == 'success'
        uses: fountainhead/action-wait-for-check@v1.0.0
        id: wait-for-build
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: build
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
      - name: Merge master -> master-ci
        if: steps.wait-for-build.outputs.conclusion == 'success'
        uses: devmasx/merge-branch@1.4.0
        with:
          type: now
          target_branch: master-ci
          github_token: ${{ secrets.GITHUB_TOKEN }}

  # master-ci -> release
  sanitize:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          ref: master-ci
          fetch-depth: 0

      - name: Wait for Merge
        uses: fountainhead/action-wait-for-check@v1.0.0
        id: wait-for-merge

        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: merge
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Set up Python 3.10.8
        uses: actions/setup-python@v3
        with:
          python-version: 3.10.8

      - name: Install Dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install -r requirements.txt

      - uses: actions/checkout@v3
        with:
          ref: release
          fetch-depth: 0

      - name: Set DEBUG False
        if: steps.wait-for-merge.outputs.conclusion == 'success'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

          git fetch origin

          git checkout master-ci

          git pull -X theirs origin master-ci

          git checkout release

          git merge -X theirs master-ci

          git add .

          git diff-index --quiet HEAD || git commit -m "Sanitized"

          git checkout release

          git pull master-ci

          git push origin release --force
